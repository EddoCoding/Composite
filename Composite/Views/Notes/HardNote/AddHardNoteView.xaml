<UserControl x:Class="Composite.Views.Notes.AddHardNoteView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Composite.Views.Notes"
             xmlns:viewModel="clr-namespace:Composite.ViewModels.Notes.HardNote"
             xmlns:property="clr-namespace:Composite.Common.Properties"
             xmlns:converter="clr-namespace:Composite.Common.Converters"
             mc:Ignorable="d" d:DesignHeight="450" d:DesignWidth="800" FontFamily="Trebuchet MS" TextOptions.TextFormattingMode="Ideal">
    <UserControl.Resources>

        <Style x:Key="TitleTextBox" TargetType="TextBox">
            <Setter Property="FontSize" Value="26"/>
            <Setter Property="Margin" Value="0,30,0,5"/>
            <Setter Property="FontFamily" Value="Trebuchet MS"/>
            <Setter Property="SelectionBrush" Value="LightGray"/>
            <Setter Property="CaretBrush" Value="Gray"/>
            <Setter Property="MaxWidth" Value="800"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"
                              HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="Text" TargetType="TextBox">
            <Setter Property="Text" Value="{Binding Text, UpdateSourceTrigger=PropertyChanged}"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontFamily" Value="Trebuchet MS"/>
            <Setter Property="SelectionBrush" Value="LightGray"/>
            <Setter Property="CaretBrush" Value="Gray"/>
            <Setter Property="MaxWidth" Value="800"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="Padding" Value="0,2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"
                            HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TextQuote" TargetType="TextBox">
            <Setter Property="Text" Value="{Binding Text, UpdateSourceTrigger=PropertyChanged}"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="FontStyle" Value="Italic"/>
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="SelectionBrush" Value="LightGray"/>
            <Setter Property="CaretBrush" Value="Gray"/>
            <Setter Property="MaxWidth" Value="700"/>
            <Setter Property="MinWidth" Value="85"/>
            <Setter Property="Margin" Value="10,0"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="AcceptsReturn" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"
                                      HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="Line" TargetType="Line">
            <Setter Property="Stroke" Value="LightGray"/>
            <Setter Property="StrokeThickness" Value="1"/>
            <Setter Property="Stretch" Value="Fill"/>
            <Setter Property="X1" Value="0"/>
            <Setter Property="X2" Value="1"/>
            <Setter Property="Width" Value="780"/>
            <Setter Property="Height" Value="20"/>
        </Style>
        <Style x:Key="AddNoteButton" TargetType="Button">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" BorderThickness="0" HorizontalAlignment="Right" Background="White" Margin="0,8,8,8">
                            <Border.Effect>
                                <DropShadowEffect Opacity="0.3" ShadowDepth="1"/>
                            </Border.Effect>

                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="6"/>

                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="WhiteSmoke"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CheckBoxTask" TargetType="CheckBox">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Width" Value="800"/>
            <Setter Property="Margin" Value="0,5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Border Grid.Column="0" x:Name="CheckBoxBorder" Width="20" Height="20" Background="White" BorderBrush="DarkGray" 
                                    BorderThickness="2" CornerRadius="3" Margin="0,0,5,0" Cursor="Hand" VerticalAlignment="Top">
                                <Path x:Name="CheckMark" Data="M 0 4 L 4 8 L 12 0" Stroke="DarkGray" StrokeThickness="2" Visibility="Collapsed" 
                                      Stretch="Uniform" Margin="2"/>
                            </Border>

                            <TextBox x:Name="textBoxTask" Grid.Column="1" Text="{Binding Text, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center"
                                     property:PlaceHolder.PlaceHolder="Enter task"
                                     PreviewKeyDown="ListView_TextBox_PreviewKeyDown">
                                <TextBox.Style>
                                    <Style TargetType="TextBox">
                                        <Setter Property="FontSize" Value="16"/>
                                        <Setter Property="FontFamily" Value="Trebuchet MS"/>
                                        <Setter Property="SelectionBrush" Value="LightGray"/>
                                        <Setter Property="CaretBrush" Value="Gray"/>
                                        <Setter Property="MaxWidth" Value="770"/>
                                        <Setter Property="TextWrapping" Value="Wrap"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="TextBox">
                                                    <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"
                                                                  HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>

                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="textBoxTask" Property="TextDecorations" Value="Strikethrough"/>
                                <Setter TargetName="textBoxTask" Property="Foreground" Value="Gray"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="CheckBoxBorder" Property="BorderBrush" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate DataType="{x:Type viewModel:TextCompositeVM}">
            <TextBox Style="{StaticResource Text}" property:PlaceHolder.PlaceHolder="Enter text" 
                     PreviewKeyDown="ListView_TextBox_PreviewKeyDown"/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewModel:HeaderCompositeVM}">
            <TextBox Style="{StaticResource Text}" FontWeight="{Binding FontWeight}" FontSize="{Binding FontSize}" property:PlaceHolder.PlaceHolder="Enter header" 
                     PreviewKeyDown="ListView_TextBox_PreviewKeyDown"/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewModel:QuoteCompositeVM}">
            <Grid MaxWidth="800">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Row="0" Grid.Column="0" Text="“" MaxWidth="800" FontSize="20"/>

                <TextBox Grid.Row="1" Grid.Column="1" Style="{StaticResource TextQuote}" AcceptsReturn="True"
                         property:PlaceHolder.PlaceHolder="Enter quote"
                         PreviewKeyDown="ListView_TextBox_PreviewKeyDown"/>

                <TextBlock Grid.Row="2" Grid.Column="2" Text="„" MaxWidth="800" FontSize="20"/>
                
            </Grid>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewModel:LineCompositeVM}">
            <StackPanel Orientation="Horizontal" Width="800" x:Name="RootPanel" Height="20" Background="White">
                
                <Line Style="{DynamicResource Line}"/>

                <Button Content="X" Margin="10,0,0,0" Cursor="Arrow" VerticalAlignment="Center" 
                        Command="{Binding DataContext.HardNoteVM.DeleteCompositeCommand, RelativeSource={RelativeSource AncestorType=ListView}}" 
                        CommandParameter="{Binding}">
                    <Button.Visibility>
                        <Binding Path="IsMouseOver" RelativeSource="{RelativeSource AncestorType=StackPanel}">
                            <Binding.Converter>
                                <converter:BooleanToVisibilityConverter/>
                            </Binding.Converter>
                        </Binding>
                    </Button.Visibility>
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <ContentPresenter/>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Foreground" Value="Red"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>
                
            </StackPanel>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewModel:TaskCompositeVM}">
            <CheckBox Style="{StaticResource CheckBoxTask}" IsChecked="{Binding IsCompleted}"/>
        </DataTemplate>

    </UserControl.Resources>
    <UserControl.InputBindings>
        <KeyBinding Gesture="CTRL+S" Command="{Binding CheckNoteCommand}"/>
    </UserControl.InputBindings>

    <Grid PreviewKeyDown="Grid_PreviewKeyDown">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <TextBox x:Name="titleTextBox" Grid.Row="0" Text="{Binding HardNoteVM.Title, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TitleTextBox}" 
                 property:PlaceHolder.PlaceHolder="Headline" PreviewKeyDown="TitleTextBox_PreviewKeyDown"/>

        <ListView Grid.Row="1" x:Name="listComposite" ItemsSource="{Binding HardNoteVM.Composites}" BorderThickness="0" HorizontalContentAlignment="Stretch"
                  Focusable="False" Cursor="IBeam" PreviewKeyDown="ListView_PreviewKeyDown" MouseDown="listComposite_MouseDown">
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Style.Setters>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListViewItem">
                                    <ContentPresenter/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style.Setters>
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>

        <Grid Grid.Row="2" Background="White" Margin="-2,-1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.Effect>
                <DropShadowEffect Opacity="0.3" ShadowDepth="1"/>
            </Grid.Effect>

            <ComboBox Grid.Column="0" ItemsSource="{Binding Categories}" SelectedItem="{Binding SelectedCategory}" Style="{StaticResource ComboBoxCustom}" ItemContainerStyle="{StaticResource ComboBoxItemCustom}"
                FontSize="12" DisplayMemberPath="NameCategory"/>

            <Button Grid.Column="1" Content="Сохранить" Style="{StaticResource AddNoteButton}" VerticalAlignment="Bottom" HorizontalAlignment="Right"
                Command="{Binding CheckNoteCommand}"/>

        </Grid>

        <Grid Grid.Row="3" Background="White" Margin="0,2,0,0">
            <Grid.Effect>
                <DropShadowEffect Opacity="0" ShadowDepth="0"/>
            </Grid.Effect>
            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Message}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>

            <TextBlock Text="{Binding Message}" Foreground="OrangeRed" Margin="10,3,0,3"/>

        </Grid>

    </Grid>

</UserControl>