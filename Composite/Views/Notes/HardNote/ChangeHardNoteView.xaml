<UserControl x:Class="Composite.Views.Notes.Notes.ChangeHardNoteView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Composite.Views.Notes"
             xmlns:viewModel="clr-namespace:Composite.ViewModels.Notes.HardNote"
             xmlns:property="clr-namespace:Composite.Common.Properties"
             xmlns:converter="clr-namespace:Composite.Common.Converters"
             xmlns:helper="clr-namespace:Composite.Common.Helpers"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             mc:Ignorable="d" d:DesignHeight="450" d:DesignWidth="800" FontFamily="Trebuchet MS" 
             TextOptions.TextFormattingMode="Ideal" KeyboardNavigation.TabNavigation="None">
    <UserControl.Resources>
        <converter:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converter:BoolToVisibilityConverter x:Key="BoolToVis"/>
        <converter:BoolToVisibilityConverter x:Key="InverseBoolToVis" Inverse="True"/>

        <Style x:Key="ImageButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="5">
                            <ContentPresenter>
                                <ContentPresenter.Content>
                                    <Image Height="{Binding Height, RelativeSource={RelativeSource AncestorType=Button}}" 
                               Width="{Binding Width, RelativeSource={RelativeSource AncestorType=Button}}"
                               Source="{Binding Content, RelativeSource={RelativeSource AncestorType=Button}}"/>
                                </ContentPresenter.Content>
                            </ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{Binding Tag, RelativeSource={RelativeSource AncestorType=Button}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TitleTextBox" TargetType="TextBox">
            <Setter Property="FontSize" Value="26"/>
            <Setter Property="Margin" Value="0,30,0,5"/>
            <Setter Property="FontFamily" Value="Trebuchet MS"/>
            <Setter Property="SelectionBrush" Value="LightGray"/>
            <Setter Property="CaretBrush" Value="Gray"/>
            <Setter Property="MaxWidth" Value="800"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"
                      HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="Text" TargetType="TextBox">
            <Setter Property="Text" Value="{Binding Text, UpdateSourceTrigger=PropertyChanged}"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontFamily" Value="Trebuchet MS"/>
            <Setter Property="SelectionBrush" Value="LightGray"/>
            <Setter Property="CaretBrush" Value="Gray"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="Padding" Value="0,0,0,5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"
                              HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TextQuote" TargetType="TextBox">
            <Setter Property="Text" Value="{Binding Text, UpdateSourceTrigger=PropertyChanged}"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="FontStyle" Value="Italic"/>
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="SelectionBrush" Value="LightGray"/>
            <Setter Property="CaretBrush" Value="Gray"/>
            <Setter Property="MinWidth" Value="85"/>
            <Setter Property="Margin" Value="3,-10"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="AcceptsReturn" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"
                              HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="Line" TargetType="Line">
            <Setter Property="Stroke" Value="LightGray"/>
            <Setter Property="StrokeThickness" Value="1"/>
            <Setter Property="Stretch" Value="Fill"/>
            <Setter Property="X1" Value="0"/>
            <Setter Property="X2" Value="1"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Margin" Value="10,0,0,0"/>
        </Style>
        <Style x:Key="UpdateNoteButton" TargetType="Button">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" BorderThickness="0" HorizontalAlignment="Right" Background="White" Margin="0,8,8,8">
                            <Border.Effect>
                                <DropShadowEffect Opacity="0.3" ShadowDepth="1"/>
                            </Border.Effect>

                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="6"/>

                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="WhiteSmoke"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CheckBoxTask" TargetType="CheckBox">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Margin" Value="10,5,0,5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Border Grid.Column="0" x:Name="CheckBoxBorder" Width="20" Height="20" Background="White" BorderBrush="DarkGray" 
                                    BorderThickness="2" CornerRadius="3" Margin="0,0,5,0" Cursor="Hand" VerticalAlignment="Top">
                                <Path x:Name="CheckMark" Data="M 0 4 L 4 8 L 12 0" Stroke="DarkGray" StrokeThickness="2" Visibility="Collapsed" 
                                      Stretch="Uniform" Margin="2"/>
                            </Border>

                            <TextBox x:Name="textBoxTask" Grid.Column="1" Text="{Binding Text, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center"
                                     property:PlaceHolder.PlaceHolder="Enter task"
                                     PreviewKeyDown="ListView_TextBox_PreviewKeyDown">
                                <TextBox.Style>
                                    <Style TargetType="TextBox">
                                        <Setter Property="FontSize" Value="16"/>
                                        <Setter Property="FontFamily" Value="Trebuchet MS"/>
                                        <Setter Property="SelectionBrush" Value="LightGray"/>
                                        <Setter Property="CaretBrush" Value="Gray"/>
                                        <Setter Property="TextWrapping" Value="Wrap"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="TextBox">
                                                    <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"
                                                          HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>

                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="textBoxTask" Property="TextDecorations" Value="Strikethrough"/>
                                <Setter TargetName="textBoxTask" Property="Foreground" Value="Gray"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="CheckBoxBorder" Property="BorderBrush" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate DataType="{x:Type viewModel:TextCompositeVM}">
            <Grid Width="1150" Background="Transparent">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="18"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <TextBox Grid.Column="0" Style="{StaticResource Text}" Text="{Binding Tag}" Margin="5,0" Width="100" TextWrapping="NoWrap" Foreground="Gray"
                         property:PlaceHolder.PlaceHolder="Enter tag" MaxLength="10" VerticalAlignment="Center"/>

                <Button Grid.Column="1" Style="{StaticResource ImageButton}" Content="/Common/Images/actions.png" Height="18" Width="18" VerticalAlignment="Top"
                        RenderOptions.BitmapScalingMode="Fant" SnapsToDevicePixels="True" Cursor="Hand" Tag="WhiteSmoke" Margin="0,2,0,0"
                        Visibility="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=Grid}, Converter={StaticResource BooleanToVisibilityConverter}}"
                        Command="{Binding DataContext.HardNoteVM.OpenPopupCommand, RelativeSource={RelativeSource AncestorType=ListView}}"
                        CommandParameter="{Binding}"/>

                <TextBox Grid.Column="2" Style="{StaticResource Text}" Margin="10,0,0,0"
                         property:PlaceHolder.PlaceHolder="Enter text" PreviewKeyDown="ListView_TextBox_PreviewKeyDown"/>

                <Button Grid.Column="3" Content="X" Cursor="Hand" VerticalAlignment="Top" VerticalContentAlignment="Top" Margin="10,2,0,0" FontSize="14"
                        Visibility="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=Grid}, Converter={StaticResource BooleanToVisibilityConverter}}"
                        Command="{Binding DataContext.HardNoteVM.DeleteCompositeCommand, RelativeSource={RelativeSource AncestorType=ListView}}" 
                        CommandParameter="{Binding}">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <ContentPresenter/>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Foreground" Value="Red"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>

                <Grid Grid.Column="4" Margin="5,1,5,0" VerticalAlignment="Top">

                    <TextBox Style="{StaticResource Text}" Text="{Binding Comment, UpdateSourceTrigger=PropertyChanged}" Foreground="Gray" FontSize="12"
                             Width="150" VerticalAlignment="Center" Visibility="{Binding IsEditing, Converter={StaticResource BoolToVis}}"
                             property:PlaceHolder.PlaceHolder="Enter comment" property:PlaceHolder.ShowAlways="True">
                        <i:Interaction.Behaviors>
                            <helper:FocusTextBoxBehavior/>
                        </i:Interaction.Behaviors>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="LostFocus">
                                <i:InvokeCommandAction Command="{Binding DataContext.HardNoteVM.StopEditingCommand, RelativeSource={RelativeSource AncestorType=ListView}}" CommandParameter="{Binding}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>

                    <Button Style="{StaticResource ImageButton}" Content="/Common/Images/comment.png" Height="18" Width="18" RenderOptions.BitmapScalingMode="Fant" VerticalAlignment="Top"
                            Visibility="{Binding IsEditing, Converter={StaticResource InverseBoolToVis}}" Cursor="Hand"
                            Command="{Binding DataContext.HardNoteVM.StartEditingCommand, RelativeSource={RelativeSource AncestorType=ListView}}" CommandParameter="{Binding}"/>

                </Grid>

            </Grid>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewModel:HeaderCompositeVM}">
            <Grid Width="1150" Background="Transparent">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="18"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <TextBox Grid.Column="0" Style="{StaticResource Text}" Text="{Binding Tag}" Margin="5,0" Width="100" TextWrapping="NoWrap" Foreground="Gray"
                         property:PlaceHolder.PlaceHolder="Enter tag" MaxLength="10" VerticalAlignment="Center"/>

                <Button Grid.Column="1" Style="{StaticResource ImageButton}" Content="/Common/Images/actions.png" Height="18" Width="18" VerticalAlignment="Top"
                        RenderOptions.BitmapScalingMode="Fant" SnapsToDevicePixels="True" Cursor="Hand" Tag="WhiteSmoke" Margin="0,4,0,0"
                        Visibility="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=Grid}, Converter={StaticResource BooleanToVisibilityConverter}}"
                        Command="{Binding DataContext.HardNoteVM.OpenPopupCommand, RelativeSource={RelativeSource AncestorType=ListView}}"
                        CommandParameter="{Binding}"/>

                <TextBox Grid.Column="2" Style="{StaticResource Text}" FontWeight="{Binding FontWeight}" FontSize="{Binding FontSize}" Margin="10,0,0,0"
                         property:PlaceHolder.PlaceHolder="Enter header" PreviewKeyDown="ListView_TextBox_PreviewKeyDown"/>

                <Button Grid.Column="3" Content="X" Margin="10,5,0,0" Cursor="Arrow" VerticalAlignment="Top" VerticalContentAlignment="Top"  FontSize="14"
                        Visibility="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=Grid}, Converter={StaticResource BooleanToVisibilityConverter}}"
                        Command="{Binding DataContext.HardNoteVM.DeleteCompositeCommand, RelativeSource={RelativeSource AncestorType=ListView}}" 
                        CommandParameter="{Binding}">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <ContentPresenter/>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Foreground" Value="Red"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>

                <Grid Grid.Column="4" Margin="5,4,5,0" VerticalAlignment="Top">

                    <TextBox Style="{StaticResource Text}" Text="{Binding Comment, UpdateSourceTrigger=PropertyChanged}" Foreground="Gray" FontSize="12"
                             Width="150" VerticalAlignment="Center" Visibility="{Binding IsEditing, Converter={StaticResource BoolToVis}}"
                             property:PlaceHolder.PlaceHolder="Enter comment" property:PlaceHolder.ShowAlways="True">
                        <i:Interaction.Behaviors>
                            <helper:FocusTextBoxBehavior/>
                        </i:Interaction.Behaviors>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="LostFocus">
                                <i:InvokeCommandAction Command="{Binding DataContext.HardNoteVM.StopEditingCommand, RelativeSource={RelativeSource AncestorType=ListView}}" CommandParameter="{Binding}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>

                    <Button Style="{StaticResource ImageButton}" Content="/Common/Images/comment.png" Height="18" Width="18" RenderOptions.BitmapScalingMode="Fant" VerticalAlignment="Top"
                            Visibility="{Binding IsEditing, Converter={StaticResource InverseBoolToVis}}" Cursor="Hand"
                            Command="{Binding DataContext.HardNoteVM.StartEditingCommand, RelativeSource={RelativeSource AncestorType=ListView}}" CommandParameter="{Binding}"/>

                </Grid>

            </Grid>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewModel:QuoteCompositeVM}">
            <Grid Width="1150" Background="Transparent">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="18"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <TextBox Grid.Column="0" Style="{StaticResource Text}" Text="{Binding Tag}" Margin="5,0" Width="100" TextWrapping="NoWrap" Foreground="Gray"
                         property:PlaceHolder.PlaceHolder="Enter tag" MaxLength="10" VerticalAlignment="Center"/>

                <Button Grid.Column="1" Style="{StaticResource ImageButton}" Content="/Common/Images/actions.png" Height="18" Width="18" VerticalAlignment="Top"
                        RenderOptions.BitmapScalingMode="Fant" SnapsToDevicePixels="True" Cursor="Hand" Tag="WhiteSmoke"
                        Visibility="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=Grid}, Converter={StaticResource BooleanToVisibilityConverter}}"
                        Command="{Binding DataContext.HardNoteVM.OpenPopupCommand, RelativeSource={RelativeSource AncestorType=ListView}}"
                        CommandParameter="{Binding}"/>

                <Grid Grid.Column="2" Margin="10,0,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Row="0" Grid.Column="0" Text="“" FontSize="18"/>

                    <TextBox Grid.Row="1" Grid.Column="1" Style="{StaticResource TextQuote}" property:PlaceHolder.PlaceHolder="Enter quote" PreviewKeyDown="ListView_TextBox_PreviewKeyDown"/>

                    <TextBlock Grid.Row="2" Grid.Column="2" Text="„" FontSize="18"/>

                </Grid>

                <Button Grid.Column="3" Content="X" Margin="10,5,0,0" Cursor="Arrow" VerticalAlignment="Top" VerticalContentAlignment="Top" FontSize="14"
                        Visibility="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=Grid}, Converter={StaticResource BooleanToVisibilityConverter}}"
                        Command="{Binding DataContext.HardNoteVM.DeleteCompositeCommand, RelativeSource={RelativeSource AncestorType=ListView}}" 
                        CommandParameter="{Binding}">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <ContentPresenter/>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Foreground" Value="Red"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>

                <Grid Grid.Column="4" Margin="5,4,5,0" VerticalAlignment="Top">

                    <TextBox Style="{StaticResource Text}" Text="{Binding Comment, UpdateSourceTrigger=PropertyChanged}" Foreground="Gray" FontSize="12"
                             Width="150" VerticalAlignment="Center" Visibility="{Binding IsEditing, Converter={StaticResource BoolToVis}}"
                             property:PlaceHolder.PlaceHolder="Enter comment" property:PlaceHolder.ShowAlways="True">
                        <i:Interaction.Behaviors>
                            <helper:FocusTextBoxBehavior/>
                        </i:Interaction.Behaviors>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="LostFocus">
                                <i:InvokeCommandAction Command="{Binding DataContext.HardNoteVM.StopEditingCommand, RelativeSource={RelativeSource AncestorType=ListView}}" CommandParameter="{Binding}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>

                    <Button Style="{StaticResource ImageButton}" Content="/Common/Images/comment.png" Height="18" Width="18" RenderOptions.BitmapScalingMode="Fant" VerticalAlignment="Top"
                            Visibility="{Binding IsEditing, Converter={StaticResource InverseBoolToVis}}" Cursor="Hand"
                            Command="{Binding DataContext.HardNoteVM.StartEditingCommand, RelativeSource={RelativeSource AncestorType=ListView}}" CommandParameter="{Binding}"/>

                </Grid>

            </Grid>


        </DataTemplate>
        <DataTemplate DataType="{x:Type viewModel:LineCompositeVM}">
            <Grid Width="1150" Background="Transparent">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="18"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <TextBox Grid.Column="0" Style="{StaticResource Text}" Text="{Binding Tag}" Margin="5,0" Width="100" TextWrapping="NoWrap" Foreground="Gray"
                         property:PlaceHolder.PlaceHolder="Enter tag" MaxLength="10" VerticalAlignment="Center"/>

                <Button Grid.Column="1" Style="{StaticResource ImageButton}" Content="/Common/Images/actions.png" Height="18" Width="18" VerticalAlignment="Top"
                        RenderOptions.BitmapScalingMode="Fant" SnapsToDevicePixels="True" Cursor="Hand" Tag="WhiteSmoke"
                        Visibility="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=Grid}, Converter={StaticResource BooleanToVisibilityConverter}}"
                        Command="{Binding DataContext.HardNoteVM.OpenPopupCommand, RelativeSource={RelativeSource AncestorType=ListView}}"
                        CommandParameter="{Binding}"/>

                <Line Grid.Column="2" Style="{StaticResource Line}"/>

                <Button Grid.Column="3" Content="X" Cursor="Arrow" VerticalAlignment="Center" Margin="10,0,0,0" FontSize="14"
                        Visibility="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=Grid}, Converter={StaticResource BooleanToVisibilityConverter}}"
                        Command="{Binding DataContext.HardNoteVM.DeleteCompositeCommand, RelativeSource={RelativeSource AncestorType=ListView}}" 
                        CommandParameter="{Binding}">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <ContentPresenter/>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Foreground" Value="Red"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>

                <Grid Grid.Column="4" Margin="5,0" VerticalAlignment="Center">

                    <TextBox Style="{StaticResource Text}" Text="{Binding Comment, UpdateSourceTrigger=PropertyChanged}" Foreground="Gray" FontSize="12"
                             Width="150" VerticalAlignment="Center" Visibility="{Binding IsEditing, Converter={StaticResource BoolToVis}}"
                             property:PlaceHolder.PlaceHolder="Enter comment" property:PlaceHolder.ShowAlways="True">
                        <i:Interaction.Behaviors>
                            <helper:FocusTextBoxBehavior/>
                        </i:Interaction.Behaviors>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="LostFocus">
                                <i:InvokeCommandAction Command="{Binding DataContext.HardNoteVM.StopEditingCommand, RelativeSource={RelativeSource AncestorType=ListView}}" CommandParameter="{Binding}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>

                    <Button Style="{StaticResource ImageButton}" Content="/Common/Images/comment.png" Height="18" Width="18" RenderOptions.BitmapScalingMode="Fant" VerticalAlignment="Top"
                            Visibility="{Binding IsEditing, Converter={StaticResource InverseBoolToVis}}" Cursor="Hand"
                            Command="{Binding DataContext.HardNoteVM.StartEditingCommand, RelativeSource={RelativeSource AncestorType=ListView}}" CommandParameter="{Binding}"/>

                </Grid>

            </Grid>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewModel:TaskCompositeVM}">
            <Grid x:Name="rootPanel" Width="1150" Background="Transparent">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="18"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <TextBox Grid.Column="0" Style="{StaticResource Text}" Text="{Binding Tag}" Margin="5,0" Width="100" TextWrapping="NoWrap" Foreground="Gray"
                         property:PlaceHolder.PlaceHolder="Enter tag" MaxLength="10" VerticalAlignment="Center"/>

                <Button Grid.Column="1" Style="{StaticResource ImageButton}" Content="/Common/Images/actions.png" Height="18" Width="18" VerticalAlignment="Top"
                        RenderOptions.BitmapScalingMode="Fant" SnapsToDevicePixels="True" Cursor="Hand" Tag="WhiteSmoke" Margin="0,6,0,0"
                        Visibility="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=Grid}, Converter={StaticResource BooleanToVisibilityConverter}}"
                        Command="{Binding DataContext.HardNoteVM.OpenPopupCommand, RelativeSource={RelativeSource AncestorType=ListView}}"
                        CommandParameter="{Binding}"/>

                <CheckBox Grid.Column="2" Style="{StaticResource CheckBoxTask}" IsChecked="{Binding IsCompleted}" VerticalAlignment="Top"/>

                <Button Grid.Column="3" Content="X" Cursor="Arrow" VerticalAlignment="Center" Margin="10,0,0,0" FontSize="14"
                        Visibility="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=Grid}, Converter={StaticResource BooleanToVisibilityConverter}}"
                        Command="{Binding DataContext.HardNoteVM.DeleteCompositeCommand, RelativeSource={RelativeSource AncestorType=ListView}}" 
                        CommandParameter="{Binding}">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <ContentPresenter/>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Foreground" Value="Red"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>

                <Grid Grid.Column="4" Margin="5,6,5,0" VerticalAlignment="Top">

                    <TextBox Style="{StaticResource Text}" Text="{Binding Comment, UpdateSourceTrigger=PropertyChanged}" Foreground="Gray" FontSize="12"
                             Width="150" VerticalAlignment="Center" Visibility="{Binding IsEditing, Converter={StaticResource BoolToVis}}"
                             property:PlaceHolder.PlaceHolder="Enter comment" property:PlaceHolder.ShowAlways="True">
                        <i:Interaction.Behaviors>
                            <helper:FocusTextBoxBehavior/>
                        </i:Interaction.Behaviors>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="LostFocus">
                                <i:InvokeCommandAction Command="{Binding DataContext.HardNoteVM.StopEditingCommand, RelativeSource={RelativeSource AncestorType=ListView}}" CommandParameter="{Binding}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>

                    <Button Style="{StaticResource ImageButton}" Content="/Common/Images/comment.png" Height="18" Width="18" RenderOptions.BitmapScalingMode="Fant" VerticalAlignment="Top"
                            Visibility="{Binding IsEditing, Converter={StaticResource InverseBoolToVis}}" Cursor="Hand"
                            Command="{Binding DataContext.HardNoteVM.StartEditingCommand, RelativeSource={RelativeSource AncestorType=ListView}}" CommandParameter="{Binding}"/>

                </Grid>

            </Grid>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewModel:ImageCompositeVM}">
            <Border MaxWidth="1150" BorderThickness="1" BorderBrush="Transparent" Margin="0,5">
                <Grid Background="Transparent">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="18"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="20"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <TextBox Grid.Column="0" Style="{StaticResource Text}" Text="{Binding Tag}" Margin="5,0" Width="100" TextWrapping="NoWrap" Foreground="Gray"
                             property:PlaceHolder.PlaceHolder="Enter tag" MaxLength="10" VerticalAlignment="Center"/>

                    <Button Grid.Column="1" Style="{StaticResource ImageButton}" Content="/Common/Images/actions.png" Height="18" Width="18" VerticalAlignment="Top"
                            RenderOptions.BitmapScalingMode="Fant" SnapsToDevicePixels="True" Cursor="Hand" Tag="WhiteSmoke"
                            Visibility="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=Grid}, Converter={StaticResource BooleanToVisibilityConverter}}"
                            Command="{Binding DataContext.HardNoteVM.OpenPopupCommand, RelativeSource={RelativeSource AncestorType=ListView}}"
                            CommandParameter="{Binding}"/>

                    <Grid Grid.Column="2" HorizontalAlignment="{Binding HorizontalImage}" Margin="10,0,0,0">

                        <Image Source="{Binding ImageSource}" Height="{Binding DisplayHeight}" Width="{Binding DisplayWidth}"
                               Cursor="Hand" RenderOptions.BitmapScalingMode="Fant" UseLayoutRounding="True" SnapsToDevicePixels="True"/>

                        <Border CornerRadius="12" VerticalAlignment="Top" HorizontalAlignment="Right" BorderThickness="0.5" BorderBrush="Gray" Background="White" Margin="0,5,5,0">
                            <StackPanel Orientation="Horizontal" Cursor="Hand"
                                        Visibility="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=Grid}, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Button Style="{StaticResource ImageButton}" Content="/Common/Images/AlignmentLeft.png" Height="20" Width="20" RenderOptions.BitmapScalingMode="Fant"
                                        Tag="WhiteSmoke" Margin="3,2" Command="{Binding ChangeHorizontalCommand}" CommandParameter="Left"/>
                                <Button Style="{StaticResource ImageButton}" Content="/Common/Images/AlignmentCenter.png" Height="20" Width="20" RenderOptions.BitmapScalingMode="Fant" 
                                        Tag="WhiteSmoke" Margin="1,2" Command="{Binding ChangeHorizontalCommand}" CommandParameter="Center"/>
                                <Button Style="{StaticResource ImageButton}" Content="/Common/Images/AlignmentRight.png" Height="20" Width="20" RenderOptions.BitmapScalingMode="Fant"
                                        Tag="WhiteSmoke" Margin="3,2" Command="{Binding ChangeHorizontalCommand}" CommandParameter="Right"/>
                                <Button Style="{StaticResource ImageButton}" Content="/Common/Images/openImage.png" Height="16" Width="16" RenderOptions.BitmapScalingMode="Fant"
                                        Tag="WhiteSmoke" Margin="1,2,3,2" Command="{Binding DataContext.HardNoteVM.OpenFullImageCommand, RelativeSource={RelativeSource AncestorType=ListView}}"
                                        CommandParameter="{Binding}"/>
                            </StackPanel>
                        </Border>

                    </Grid>

                    <Button Grid.Column="3" Content="X" Margin="10,0,0,0" Cursor="Arrow" VerticalAlignment="Top" FontSize="14"
                            Visibility="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=Grid}, Converter={StaticResource BooleanToVisibilityConverter}}"
                            Command="{Binding DataContext.HardNoteVM.DeleteCompositeCommand, RelativeSource={RelativeSource AncestorType=ListView}}" 
                            CommandParameter="{Binding}">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <ContentPresenter/>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Foreground" Value="Red"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                    </Button>

                    <Grid Grid.Column="4" Margin="5,0" VerticalAlignment="Top">

                        <TextBox Style="{StaticResource Text}" Text="{Binding Comment, UpdateSourceTrigger=PropertyChanged}" Foreground="Gray" FontSize="12"
                                 Width="150" VerticalAlignment="Center" Visibility="{Binding IsEditing, Converter={StaticResource BoolToVis}}"
                                 property:PlaceHolder.PlaceHolder="Enter comment" property:PlaceHolder.ShowAlways="True">
                            <i:Interaction.Behaviors>
                                <helper:FocusTextBoxBehavior/>
                            </i:Interaction.Behaviors>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="LostFocus">
                                    <i:InvokeCommandAction Command="{Binding DataContext.HardNoteVM.StopEditingCommand, RelativeSource={RelativeSource AncestorType=ListView}}" CommandParameter="{Binding}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>

                        <Button Style="{StaticResource ImageButton}" Content="/Common/Images/comment.png" Height="18" Width="18" RenderOptions.BitmapScalingMode="Fant" VerticalAlignment="Top"
                                Visibility="{Binding IsEditing, Converter={StaticResource InverseBoolToVis}}" Cursor="Hand"
                                Command="{Binding DataContext.HardNoteVM.StartEditingCommand, RelativeSource={RelativeSource AncestorType=ListView}}" CommandParameter="{Binding}"/>

                    </Grid>

                </Grid>
            </Border>
        </DataTemplate>

        <DataTemplate DataType="{x:Type viewModel:CommonCommandMenu}">
            <Button Style="{StaticResource ImageTextButton}" Content="{Binding NameCommand}" FontSize="15" Tag="{Binding PathImage}" Height="22" 
                    Margin="3" RenderOptions.BitmapScalingMode="Fant" TextOptions.TextFormattingMode="Display"
                    Command="{Binding ActionCommand}"/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewModel:CommandContextMenu}">
            <Button Style="{StaticResource ImageTextButton}" Content="{Binding NameCommand}" FontSize="15" Tag="{Binding PathImage}" Height="22" 
                    Margin="3" RenderOptions.BitmapScalingMode="Fant" TextOptions.TextFormattingMode="Display"
                    Command="{Binding ActionCommand}" Click="PositionPopup"/>
        </DataTemplate>

    </UserControl.Resources>
    <UserControl.InputBindings>
        <KeyBinding Gesture="CTRL+S" Command="{Binding CheckNoteCommand}"/>
    </UserControl.InputBindings>

    <Grid PreviewKeyDown="Grid_PreviewKeyDown">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <TextBox x:Name="titleTextBox" Grid.Row="0" Text="{Binding HardNoteVM.Title, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TitleTextBox}" 
                 property:PlaceHolder.PlaceHolder="Headline" PreviewKeyDown="TitleTextBox_PreviewKeyDown"/>

        <ListView Grid.Row="1" x:Name="listComposite" ItemsSource="{Binding HardNoteVM.Composites}" BorderThickness="0" HorizontalContentAlignment="Stretch"
                  Focusable="False" Cursor="IBeam" ScrollViewer.CanContentScroll="False" Padding="0,0,0,15"
                  PreviewKeyDown="ListView_PreviewKeyDown" MouseDown="listComposite_MouseDown" PreviewMouseWheel="listComposite_PreviewMouseWheel">
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Style.Setters>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListViewItem">
                                    <ContentPresenter/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style.Setters>
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>

        <Grid Grid.Row="2" Background="White" Margin="-1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.Effect>
                <DropShadowEffect Opacity="0.3" ShadowDepth="1"/>
            </Grid.Effect>

            <ComboBox Grid.Column="0" ItemsSource="{Binding Categories}" SelectedItem="{Binding SelectedCategory}" Style="{StaticResource ComboBoxCustom}" ItemContainerStyle="{StaticResource ComboBoxItemCustom}"
                FontSize="12" DisplayMemberPath="NameCategory"/>
            
            <Button Grid.Column="1" Content="Сохранить" Style="{StaticResource UpdateNoteButton}" VerticalAlignment="Bottom" HorizontalAlignment="Right"
                Command="{Binding CheckNoteCommand}"/>

        </Grid>

        <Grid Grid.Row="3" Background="White" Margin="0,2,0,0">
            <Grid.Effect>
                <DropShadowEffect Opacity="0" ShadowDepth="0"/>
            </Grid.Effect>
            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Message}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>

            <TextBlock Text="{Binding Message}" Foreground="OrangeRed" Margin="10,3,0,3"/>

        </Grid>

        <Popup x:Name="ImagePopup" IsOpen="{Binding HardNoteVM.IsImagePopupOpen, Mode=TwoWay}" Placement="Center" AllowsTransparency="True" StaysOpen="False">
            <Border BorderBrush="Gray" BorderThickness="0.5">
                <Image Source="{Binding HardNoteVM.Image}" Stretch="Uniform" MaxHeight="1000" MaxWidth="1000" RenderOptions.BitmapScalingMode="Fant"/>
            </Border>
        </Popup>

        <Popup IsOpen="{Binding HardNoteVM.IsOpenPopup, Mode=TwoWay}" Placement="Mouse" AllowsTransparency="True" StaysOpen="False">
            <Border Background="White" BorderBrush="Gray" BorderThickness="1" CornerRadius="5">
                <StackPanel>
                    <ListView ItemsSource="{Binding HardNoteVM.CommonContextMenu}" Padding="0,0,0,3" BorderThickness="1" BorderBrush="Transparent">
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ListViewItem">
                                            <ContentPresenter/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListView.ItemContainerStyle>
                    </ListView>

                    <Line X1="0" X2="1" Stretch="Fill" Stroke="Gray" Margin="10,0"/>

                    <ListView ItemsSource="{Binding HardNoteVM.ContextMenu}" Padding="0,0,0,3" BorderThickness="1" BorderBrush="Transparent">
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ListViewItem">
                                            <ContentPresenter/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListView.ItemContainerStyle>
                    </ListView>
                </StackPanel>
            </Border>
        </Popup>

        <Popup x:Name="SecondPopup" IsOpen="{Binding HardNoteVM.IsOpenPopupType, Mode=TwoWay}" AllowsTransparency="True" StaysOpen="False" Placement="Right" HorizontalOffset="10">
            <Border Background="White" BorderBrush="Gray" BorderThickness="1" CornerRadius="5">
                <ListView ItemsSource="{Binding HardNoteVM.ContextMenuTypes}" Padding="0,0,0,3" BorderThickness="1" BorderBrush="Transparent">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListViewItem">
                                        <ContentPresenter/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>
            </Border>
        </Popup>

    </Grid>

</UserControl>