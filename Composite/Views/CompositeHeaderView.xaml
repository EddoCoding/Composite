<UserControl x:Class="Composite.Views.CompositeHeaderView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:local="clr-namespace:Composite.Common.Properties"
             mc:Ignorable="d" d:DesignHeight="450" d:DesignWidth="800" FontFamily="Verdana">
    <UserControl.Resources>
        <Style x:Key="ImageButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter>
                                <ContentPresenter.Content>
                                    <Image Height="{Binding Height, RelativeSource={RelativeSource AncestorType=Button}}" 
                                        Width="{Binding Width, RelativeSource={RelativeSource AncestorType=Button}}"
                                        Source="{Binding Content, RelativeSource={RelativeSource AncestorType=Button}}"/>
                                </ContentPresenter.Content>
                            </ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="WhiteSmoke"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="SliderThumbHorizontalDefault" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Ellipse x:Name="grip" Width="11" Height="11" Fill="Black" StrokeThickness="1" SnapsToDevicePixels="True" UseLayoutRounding="True"
                    VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="LightGray"/>
                    <Setter Property="Stroke" TargetName="grip" Value="Gray"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderHorizontal" TargetType="{x:Type Slider}">
            <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,0,0,2" Placement="Top" Grid.Row="0" Visibility="Collapsed"/>
                    <TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,2,0,0" Placement="Bottom" Grid.Row="2" Visibility="Collapsed"/>
                    <Border x:Name="TrackBackground" Background="Black" BorderThickness="1" Height="3.0" Margin="5,0" Grid.Row="1" VerticalAlignment="center">
                        <Canvas Margin="-6,-1">
                            <Rectangle x:Name="PART_SelectionRange" Fill="Black" Height="4.0" Visibility="Hidden"/>
                        </Canvas>
                    </Border>
                    <Track x:Name="PART_Track" Grid.Row="1">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                        </Track.DecreaseRepeatButton>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                        </Track.IncreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb x:Name="Thumb" Focusable="False" Height="11" Width="11" OverridesDefaultStyle="True" Template="{StaticResource SliderThumbHorizontalDefault}" VerticalAlignment="Center"/>
                        </Track.Thumb>
                    </Track>

                </Grid>
            </Border>
        </ControlTemplate>
        <Style x:Key="customSlider" TargetType="{x:Type Slider}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Minimum" Value="0"/>
            <Setter Property="Maximum" Value="1"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template" Value="{StaticResource SliderHorizontal}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding MediaPlayerService}" Value="{x:Null}">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <Grid Background="White" Margin="10">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.Effect>
            <DropShadowEffect Opacity="0.3" ShadowDepth="1"/>
        </Grid.Effect>

        <TextBlock Grid.Column="0" Text="{Binding Title}" FontSize="14" Margin="5"/>

        <Border Grid.Column="1" BorderThickness="1,0,0,0" BorderBrush="Gray" Margin="5,0,0,0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0" Text="{Binding MediaPlayerService.NameSong}" Name="SongTextBlock" VerticalAlignment="Center" HorizontalAlignment="Right" TextTrimming="WordEllipsis"
                    Margin="5,0,0,0" FontSize="11" MaxWidth="500" Visibility="{Binding Visibility}" MouseEnter="SongTextBlock_MouseEnter" MouseLeave="SongTextBlock_MouseLeave">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding MediaPlayerService}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <Popup Name="SongActionsPopup" PlacementTarget="{Binding ElementName=SongTextBlock}" Placement="Bottom" StaysOpen="True"
                    AllowsTransparency="True" PopupAnimation="Slide">
                    <Border Background="White" BorderBrush="Gray" BorderThickness="1" CornerRadius="5" Padding="5"
                        MouseEnter="PopupBorder_MouseEnter" MouseLeave="PopupBorder_MouseLeave">
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth="2" Color="Gray" Opacity="0.3"/>
                        </Border.Effect>

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Grid Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Grid.Column="0" Text="Песни" FontWeight="Bold" Margin="5" HorizontalAlignment="Center" FontSize="14"/>
                                <Button Grid.Column="1" Content="Добавить" Style="{StaticResource DefaultButton}" HorizontalAlignment="Right" FontSize="14"
                                        Command="{Binding MediaPlayerService.SelectSongsCommand}"/>
                                <Button Grid.Column="2" Content="Удалить всё" Style="{StaticResource DefaultButton}" Margin="10,0,0,0" FontSize="14"
                                        Command="{Binding MediaPlayerService.DeleteSongsCommand}"/>
                            </Grid>

                            <ListView Grid.Row="1" ItemsSource="{Binding MediaPlayerService.Songs}" Height="400" Width="500" ScrollViewer.VerticalScrollBarVisibility="Auto"
                                      BorderThickness="0">
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>

                                            <Button Grid.Column="0">
                                                <Button.Style>
                                                    <Style TargetType="Button">
                                                        <Setter Property="Command" Value="{Binding DataContext.MediaPlayerService.SelectSongCommand, RelativeSource={RelativeSource AncestorType=ListView}}"/>
                                                        <Setter Property="CommandParameter" Value="{Binding}"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="Button">
                                                                    <TextBlock Text="{Binding Title}" TextTrimming="WordEllipsis" Width="350"/>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Button.Style>
                                            </Button>

                                            <Button Grid.Column="1" Content="delete" Style="{StaticResource DefaultButton}" HorizontalAlignment="Right"
                                                    Command="{Binding DataContext.MediaPlayerService.DeleteSongCommand, RelativeSource={RelativeSource AncestorType=ListView}}" 
                                                    CommandParameter="{Binding}"/>

                                        </Grid>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem">
                                        <Style.Setters>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ListViewItem">
                                                        <Border Background="{TemplateBinding Background}" BorderThickness="0,0,0,1" BorderBrush="Gray">
                                                            <ContentPresenter Margin="5,5,5,0"/>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Background" Value="WhiteSmoke"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style.Setters>
                                    </Style>
                                </ListView.ItemContainerStyle>
                            </ListView>

                        </Grid>
                    </Border>
                </Popup>

                <Grid Grid.Column="1" Margin="10,0" Visibility="{Binding Visibility}" VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0" Text="{Binding MediaPlayerService.CurrentTime}" Margin="0,0,5,0" VerticalAlignment="Center"/>

                    <Slider Grid.Column="1" Minimum="0" Maximum="{Binding MediaPlayerService.Duration}" Value="{Binding MediaPlayerService.Position, Mode=OneWay}"
                            IsMoveToPointEnabled="True" VerticalAlignment="Center" Style="{StaticResource customSlider}"
                            local:SliderBehavior.StartSeekCommand="{Binding MediaPlayerService.StartSeekingCommand}"
                            local:SliderBehavior.StopSeekCommand="{Binding MediaPlayerService.StopSeekingCommand}"/>

                    <TextBlock Grid.Column="2" Text="{Binding MediaPlayerService.TotalTime}" Margin="5,0,0,0" VerticalAlignment="Center"/>

                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding MediaPlayerService}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>

                </Grid>

                <StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Center" Visibility="{Binding Visibility}">
                    
                    <Button Content="/Common/Images/back.png" Style="{StaticResource ImageButton}" Height="16" Width="16" RenderOptions.BitmapScalingMode="Fant"
                            Command="{Binding MediaPlayerService.BackCommand}"/>
                    <Button Content="/Common/Images/playStop.png" Style="{StaticResource ImageButton}" Height="26" Width="26" RenderOptions.BitmapScalingMode="Fant"
                            Command="{Binding MediaPlayerService.PlayCommand}"/>
                    <Button Content="/Common/Images/next.png" Style="{StaticResource ImageButton}" Height="16" Width="16" RenderOptions.BitmapScalingMode="Fant"
                            Command="{Binding MediaPlayerService.NextCommand}"/>

                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding MediaPlayerService}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>

                </StackPanel>

                <Button Grid.Column="3" Content="{Binding MediaPlayerService.PathImageRepeat}" Style="{StaticResource ImageButton}" Height="21" Width="21" Margin="5,0,0,0"
                        RenderOptions.BitmapScalingMode="Fant" Visibility="{Binding Visibility}" Command="{Binding MediaPlayerService.RepeatCommand}"/>

                <Slider Grid.Column="4" Value="{Binding MediaPlayerService.Volume}" Style="{StaticResource customSlider}" Width="80" Visibility="{Binding Visibility}"/>

                <Button Grid.Column="5" Content="{Binding NameButtonStartStopMediaPlayer}" Style="{StaticResource DefaultButton}" Margin="0,0,5,0"
                        RenderOptions.BitmapScalingMode="Fant" Command="{Binding StarStopMediaPlayerCommand}"/>

            </Grid>
        </Border>
        
    </Grid>
</UserControl>